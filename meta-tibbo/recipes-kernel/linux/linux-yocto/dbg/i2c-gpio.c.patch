--- ./drivers/i2c/busses/i2c-gpio.c	2015-03-25 03:07:46.000000000 +0300
+++ ./drivers/i2c/busses/i2c-gpio.c	2015-03-25 03:08:37.726273071 +0300
@@ -88,9 +88,11 @@
 static int of_i2c_gpio_get_pins(struct device_node *np,
 				unsigned int *sda_pin, unsigned int *scl_pin)
 {
+printk(KERN_ERR "%s 00\n", __FUNCTION__);
 	if (of_gpio_count(np) < 2)
 		return -ENODEV;
 
+printk(KERN_ERR "%s 10\n", __FUNCTION__);
 	*sda_pin = of_get_gpio(np, 0);
 	*scl_pin = of_get_gpio(np, 1);
 
@@ -130,13 +132,16 @@
 	unsigned int sda_pin, scl_pin;
 	int ret;
 
+printk(KERN_ERR "%s 00\n", __FUNCTION__);
 	/* First get the GPIO pins; if it fails, we'll defer the probe. */
 	if (pdev->dev.of_node) {
+printk(KERN_ERR "%s 10\n", __FUNCTION__);
 		ret = of_i2c_gpio_get_pins(pdev->dev.of_node,
 					   &sda_pin, &scl_pin);
 		if (ret)
 			return ret;
 	} else {
+printk(KERN_ERR "%s 11\n", __FUNCTION__);
 		if (!dev_get_platdata(&pdev->dev))
 			return -ENXIO;
 		pdata = dev_get_platdata(&pdev->dev);
@@ -144,6 +149,7 @@
 		scl_pin = pdata->scl_pin;
 	}
 
+printk(KERN_ERR "%s 20\n", __FUNCTION__);
 	ret = gpio_request(sda_pin, "sda");
 	if (ret) {
 		if (ret == -EINVAL)
@@ -157,6 +163,7 @@
 		goto err_request_scl;
 	}
 
+printk(KERN_ERR "%s 30\n", __FUNCTION__);
 	priv = devm_kzalloc(&pdev->dev, sizeof(*priv), GFP_KERNEL);
 	if (!priv) {
 		ret = -ENOMEM;
@@ -224,6 +231,7 @@
 	if (ret)
 		goto err_add_bus;
 
+printk(KERN_ERR "%s 40\n", __FUNCTION__);
 	platform_set_drvdata(pdev, priv);
 
 	dev_info(&pdev->dev, "using pins %u (SDA) and %u (SCL%s)\n",
